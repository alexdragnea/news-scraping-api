name: CI/CD Pipeline
on:
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  #Maven Build Job
  mvn_build:
    name: Build
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run mvn clean install and Bump Version
      - name: Run Maven Install amd Bump Version
        run: mvn clean install -DbumpMinor -Dmaven.test.skip

  #Test's job
  tests:
    #Depends on test's job
    needs: mvn_build
    name: Unit Testing
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests - mutation coverage (Threshold 80%)
      - name: Run Unit Tests
        run: mvn -B test

  #Test's job
  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build project
        run: mvn clean package
      - name: Run Performance Testing for NewsController
        run: mvn gatling:test -Dgatling.simulationClass=net.dg.newsscrapingapi.performance.NewsControllerPerformanceTesting
        working-directory: .
      - name: Publish NewsController Reports
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          publish_dir: target/gatling/newscontroller
          publish_branch: gh-pages
          enable_jekyll: false
      - name: Wait for 10 seconds
        run: sleep 10s
      - name: Run Performance Testing for ScrapeController
        run: mvn gatling:test -Dgatling.simulationClass=net.dg.newsscrapingapi.performance.ScrapeControllerPerformanceTesting
        working-directory: .
      - name: Publish ScrapeController Reports
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          publish_dir: target/gatling/scrapecontroller
          publish_branch: gh-pages
          enable_jekyll: false

  owasp:
    permissions: write-all
    name: OWASP ZAP SCANS
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Building Docker Image
        run: docker-compose build
      - name: Launching the app
        run: docker-compose up --detach

      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://localhost:5000'
          issue_title: OWASP Security Testing


